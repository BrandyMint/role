{"name":"Role","body":"# jquery.role — jQuery plugin to provide easy way to handle DOM elements by role attribute\r\n\r\nThis project uses [Semantic Versioning](http://semver.org/) for release numbering.\r\n\r\nSponsored by [Evil Martians](http://evilmartians.com/).\r\n\r\n## Downloads\r\n\r\n* [jquery.role.min.js](https://raw.github.com/kossnocorp/role/master/lib/jquery.role.min.js)\r\n* [role.min.js](https://raw.github.com/kossnocorp/role/master/lib/jquery.role.min.js)\r\n* [jquery.role.js](https://raw.github.com/kossnocorp/role/master/lib/jquery.role.js)\r\n* [role.js](https://raw.github.com/kossnocorp/role/master/lib/role.js)\r\n\r\nAlso you can add jquery.role.js and role.js by bundle `role-rails` gem. For futher details see *installation* section below.\r\n\r\n## Use `role` attribute FTW\r\n\r\n```\r\nUse cases for a role attribute for HTML5, include:\r\n\r\n* accessibility,\r\n* device adaptation,\r\n* server-side processing, and\r\n* complex data description.\r\n```\r\n\r\nThis is a quote from [W3C Specification on Role attribute](http://www.w3.org/wiki/PF/XTech/HTML5/RoleAttribute#A_Role_Attribute_for_HTML5).\r\n\r\nIn [Evil Martians](http://evilmartians.com/) we came up with a way to use this attribute for our own purposes.\r\n\r\nSay you have to update your website page design. HTML markup is done and you have to apply it to the existing site. Of course this marvelous page is crammed with Javascript code tied to an existing structure.\r\n\r\n``` javascript\r\n$('.list .item img')\r\n    .mouseenter(function () {\r\n        $(this).rotateTo(30, 300)\r\n    })\r\n    .mouseleave(function () {\r\n        $(this).rotateTo(0, 300)\r\n    });\r\n```\r\n\r\nObviously, you'll have to rewrite all the selectors for the new layout. And it would be nice if you had to fix only one (or even ten) of these selectors. In reality, most likely, there will be several dozen of them.\r\n\r\nAnother issue is that refactoring process requires you to change the names or a number of classes. You'll have to muddle through every JS file to find all classes you are going to change.\r\n\r\nAnd, of course, in both cases the end result is absolutely unpredictable, because layout alone is not enougn to figure out if a class is actualy used in JS.\r\n\r\nThe `.js-class_name` prefix use may seem like a good idea, except that someone will surely add styles to this class in a future... Let alone the difficulty to spot, among a large of number of classes, one with a prefix.\r\n\r\nIn order to avoid this problems, we can \"attach\" JS to DOM elements by a `role` attribute.\r\n\r\nIt's a lot safer then prefixes, beacause it's much harder to attach styles to `role` and it feals morally difficult to break the `role` use convention.\r\n\r\nWith the use of `role`, layout update becomes very straightforward: you just have to add roles to a new element, and if you are not tied to the \"magic numbers\" -- it will work with no further hassle.\r\n\r\nTo make life easier (shoutout to [@alex_chrome](https://twitter.com/#!/alex_chrome) for the great idea) we also extended jQuery selector syntax:\r\n\r\n``` javascript\r\n$('@list @item @image')\r\n    .mouseenter(function () {\r\n        $(this).rotateTo(30, 300)\r\n    })\r\n    .mouseleave(function () {\r\n        $(this).rotateTo(0, 300)\r\n    });\r\n```\r\n\r\n`$('@list @item @image')` is the same as `$('[role=\"list\"] [role=\"item] [role=\"image\"]')` and you can use \"multirole\": `$('@list@coupons')`.\r\n\r\nIn addition to the jQuery plug-in, I also wrote a version that extends `querySelectorAll` of [Zepto.js](http://zeptojs.com/) with a Role functionality.\r\n\r\nUsing of 'role' in a query may work a bit slower compared to usual selectors, but it's neglectable even in a large number of queries.\r\n\r\nIn addition to `role`, I sometimes use `id`, but only in very extraodinary cases — because if there is only single element on a page today, it may happen that there will be a few tomorrow, even if that wasn't planned.\r\n\r\n## Usage\r\n\r\n### Using selectors\r\n\r\nYou can use shortcut `@` in jQuery selectors to find elements with roles.\r\n\r\nWill select all elements in document with `role=\"ajax-link\"`:\r\n\r\n``` js\r\n$('@ajax-link')\r\n```\r\n\r\nAlso you can combinate roles:\r\n\r\n`<form role=\"form login_form\"></form>`:\r\n\r\n``` js\r\n$('@form@login_form')\r\n```\r\n\r\nWill select all forms with \"form\" as role `<form role=\"form login_form\"></form><form role=\"form registration_form\"></form>`:\r\n\r\n``` js\r\n$('@form')\r\n```\r\n\r\nYou can combine role with other selectors, but that is not recommended:\r\n\r\n`<form class=\"dark\" role=\"login_form\" method=\"post\"></form>`:\r\n\r\n``` js\r\n$('form.dark@login_form[method=post]')\r\n```\r\n\r\n## Installation\r\n\r\nComing soon.\r\n\r\n## Changelog\r\n\r\n### 1.2.0 (April 19, 2012)\r\n\r\n* Total rewrite. jQuery versions 1.2-1.7 compatibility (@rwz)\r\n\r\n### 1.0.2 (March 14, 2012)\r\n\r\n* Fixes problem in Internet Explorer 8 in jquery.role.js and role.js (issue #11) (thanks @igor-alexandrov for help)\r\n\r\n### 1.0.1 (January 27, 2012)\r\n\r\n* Fixes problem with multiple roles in Firefox 8 and later (issue #9)\r\n\r\n### 1.0.0 (December 26, 2011)\r\n\r\n* Remove depricated function\r\n* Rewrite in CoffeeScript\r\n\r\n### 0.4.1 (December 8, 2011)\r\n\r\n* Fix issue #8\r\n\r\n### 0.4.0 (December 8, 2011)\r\n\r\n* Added specs for jQuery Role\r\n* Selectors performance improvement for modern browsers (also covers #6)\r\n* Role extension for querySelectorAll function (`src/role.coffee`)\r\n\r\n### 0.3.2 (June 2, 2011)\r\n\r\n* Reverted changes made in 0.3.1 because issue #6\r\n\r\n### 0.3.1 (May 24, 2011)\r\n\r\n* Selectors performance improvement for modern browsers\r\n\r\n### 0.3.0 (May 23, 2011)\r\n\r\n* Added native Sizzle selectors support (`$('@ajax_link')`)\r\n\r\n### 0.2.0 (May 20, 2011)\r\n\r\n* Added mechanism to pick roles by element id\r\n\r\n### 0.1.0 (May 05, 2011)\r\n\r\n* Initial release\r\n\r\n## Contributors\r\n\r\nOriginal idea by @kossnocorp and @ai.\r\n\r\n* @kossnocorp\r\n* @chrome\r\n* @rwz\r\n* @yury\r\n\r\nSpecial thanks to @skfd and @yaroslav for helping with this README.\r\n\r\n## License\r\n\r\nThe MIT License\r\n\r\nCopyright (c) 2011 Sasha Koss\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","tagline":"jQuery plugin to provide easy way to handle DOM elements by role attribute","google":"UA-17373037-3","note":"Don't delete this file! It's used internally to help with page regeneration."}